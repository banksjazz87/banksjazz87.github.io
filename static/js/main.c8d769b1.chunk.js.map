{"version":3,"sources":["index.js"],"names":["addition","x","y","subtraction","multiplication","division","View","props","state","id","this","tag","startValue","activeValue","React","Component","Buttons","class","type","onClick","event","globalOnClick","issuedValue","Application","initialState","calculatingState","calculatedState","recordedState","runningTotal","operator","testState","negative","handleOnClick","bind","clearOnClick","digitLimit","setState","currentTotal","parseFloat","length","Math","abs","currentRecordString","toString","currentRecord","charAt","signRegEx","test","includes","num","Number","round","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8d769b1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction addition(x, y){\n  return x += y;\n}\n\nfunction subtraction(x, y){\n  return x -= y;\n}\n\nfunction multiplication(x, y){\n  return x *= y;\n}\n\nfunction division(x, y){\n  return x /= y;\n}\n\nfunction round(num){\n  return Number(Math.round(num * 10000) / 10000);\n}\n\n\nclass View extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n  }\n  render(){\n    return(\n      <div id={this.props.tag}>\n        <h1>{this.props.startValue}{this.props.activeValue}</h1>\n      </div>\n    )\n  }\n}\n\nclass Buttons extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n     \n    }\n  }\n  render(){\n    return(\n        <button id={this.props.tag} \n                class={this.props.type} \n                onClick={(event) => this.props.globalOnClick(this.props.issuedValue)}>\n                    {this.props.issuedValue}\n        </button>\n      \n    );\n  }\n}\nclass Application extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      initialState: \"0\", \n      calculatingState: \"\",\n      calculatedState: [],\n      recordedState: [],\n      runningTotal: '',\n      operator: '',\n      testState: '2',\n      negative: false\n    }\n\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.clearOnClick = this.clearOnClick.bind(this);\n\n    this.digitLimit = this.digitLimit.bind(this);\n\n  }\n  \n  handleOnClick(event){\n\n    switch(event){\n\n      case '0':\n\n          if(this.state.calculatingState === '0'){\n\n           this.setState({\n             initialState: '',\n             calculatingState: event,\n             calculatedState: this.state.calculatedState + event,\n             recordedState: [this.state.recordedState + event],\n             operator: this.state.operator\n           });\n\n         }else if(this.state.operator === '+'){\n\n           let currentTotal = parseFloat(this.state.calculatedState);\n\n              this.setState({\n              initialState: '',\n              calculatingState: this.state.calculatingState + event,\n              calculatedState: currentTotal,\n              runningTotal: addition(currentTotal, parseFloat(this.state.calculatingState + event)),\n              recordedState: [this.state.recordedState + event],\n              operator: this.state.operator\n              });\n\n          }else if(this.state.operator === '-'){\n\n            let currentTotal = parseFloat(this.state.calculatedState);\n\n            this.setState({\n              initialState: '',\n              calculatingState: this.state.calculatingState + event,\n              calculatedState: currentTotal,\n              runningTotal: subtraction(currentTotal, parseFloat(this.state.calculatingState + event)),\n              recordedState: [this.state.recordedState + event],\n              operator: this.state.operator\n            });\n\n          }else if(this.state.operator === 'x'){\n\n            let currentTotal = parseFloat(this.state.calculatedState);\n\n            this.setState({\n              initialState: '',\n              calculatingState: this.state.calculatingState + event,\n              calculatedState: currentTotal,\n              runningTotal: multiplication(currentTotal, parseFloat(this.state.calculatingState + event)),\n              recordedState: [this.state.recordedState + event],\n              operator: this.state.operator\n            });\n\n          }else if(this.state.operator === '÷'){\n\n            let currentTotal = parseFloat(this.state.calculatedState);\n\n            this.setState({\n              initialState: '',\n              calculatingState: this.state.calculatingState + event,\n              calculatedState: currentTotal,\n              runningTotal: division(currentTotal, parseFloat(this.state.calculatingState + event)),\n              recordedState: [this.state.recordedState + event],\n              operator: this.state.operator\n            });\n\n        }else{\n\n          this.setState({\n            initialState: '',\n            calculatingState: this.state.calculatingState + event,\n            calculatedState: [this.state.calculatedState + event],\n            recordedState: [this.state.recordedState + event],\n            operator: this.state.operator\n          });\n        }\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        if(this.state.operator === \"+\"){\n\n          let currentTotal = parseFloat(this.state.calculatedState);\n\n          this.setState({\n          initialState: '',\n          calculatingState: this.state.calculatingState + event,\n          calculatedState: currentTotal,\n          runningTotal: addition(currentTotal, parseFloat(this.state.calculatingState + event)),\n          recordedState: [this.state.recordedState + event],\n          operator: this.state.operator\n        });\n\n        }else if(this.state.operator === \"-\"){\n\n          let currentTotal = parseFloat(this.state.calculatedState);\n\n          this.setState({\n            initialState: '',\n            calculatingState: this.state.calculatingState +     event,\n            calculatedState: currentTotal,\n            runningTotal: subtraction(currentTotal, parseFloat(this.state.calculatingState + event)),\n            recordedState: [this.state.recordedState + event],\n            operator: this.state.operator\n          });\n\n      //code from here to next comment, pertains to the handling of negative numbers\n\n      }else if(this.state.negative === true && this.state.operator[this.state.operator.length - 2] === '+'){\n\n        let currentTotal = parseFloat(this.state.calculatedState);\n\n        this.setState({\n        initialState: '',\n        calculatingState: this.state.calculatingState + event,\n        calculatedState: currentTotal,\n        runningTotal: addition(currentTotal, parseFloat(-Math.abs(this.state.calculatingState + event))),\n        recordedState: [this.state.recordedState + event],\n        operator: this.state.operator\n      });\n\n      }else if(this.state.negative === true && this.state.operator[this.state.operator.length - 2] === 'x'){\n\n        let currentTotal = parseFloat(this.state.calculatedState);\n\n          this.setState({\n          initialState: '',\n          calculatingState: this.state.calculatingState + event,\n          calculatedState: currentTotal,\n          runningTotal: multiplication(currentTotal, parseFloat(-Math.abs(this.state.calculatingState + event))),\n          recordedState: [this.state.recordedState + event],\n          operator: this.state.operator\n      });\n\n      }else if(this.state.negative === true && this.state.operator[this.state.operator.length - 2] === '÷'){\n\n        let currentTotal = parseFloat(this.state.calculatedState);\n\n        this.setState({\n        initialState: '',\n        calculatingState: this.state.calculatingState + event,\n        calculatedState: currentTotal,\n        runningTotal: division(currentTotal, parseFloat(-Math.abs(this.state.calculatingState + event))),\n        recordedState: [this.state.recordedState + event],\n        operator: this.state.operator\n      });\n\n      //end of Negative Numbers\n  \n      }else if(this.state.operator === \"x\"){\n\n        let currentTotal = parseFloat(this.state.calculatedState);\n\n        this.setState({\n        initialState: '',\n        calculatingState: this.state.calculatingState + event,\n        calculatedState: currentTotal,\n        runningTotal: multiplication(currentTotal, parseFloat(this.state.calculatingState + event)),\n        recordedState: [this.state.recordedState + event],\n        operator: this.state.operator\n      });\n\n      }else if(this.state.operator === '÷'){\n\n        let currentTotal = parseFloat(this.state.calculatedState);\n\n        this.setState({\n        initialState: '',\n        calculatingState: this.state.calculatingState + event,\n        calculatedState: currentTotal,\n        runningTotal: division(currentTotal, parseFloat(this.state.calculatingState + event)),\n        recordedState: [this.state.recordedState + event],\n        operator: this.state.operator\n    });\n\n      }else{\n\n        this.setState({\n          initialState: '',\n          calculatingState: this.state.calculatingState + event,\n          calculatedState: [this.state.calculatedState + event], \n          recordedState: [this.state.recordedState + event],\n          operator: this.state.operator\n        });\n      }\n        break;\n\n      case '+':\n        if(this.state.runningTotal){\n\n          this.setState({\n            initialState: event,\n            calculatingState: '',\n            calculatedState: this.state.runningTotal,\n            recordedState: [this.state.recordedState + event],\n            operator: event,\n            negative: false\n          }); \n\n        }else{\n\n        this.setState({\n          initialState: event,\n          calculatingState: '',\n          calculatedState: [this.state.calculatedState + event],\n          recordedState: [this.state.recordedState + event], \n          operator: event,\n          negative: false\n        });\n      }\n        break;\n\n      case '-':\n\n      let currentRecordString = this.state.recordedState.toString();\n\n      let currentRecord = currentRecordString.charAt(currentRecordString.length - 1);\n\n      const numRegEx = /[0-9 | .]/;\n\n      const signRegEx = /[+ | x | ÷]/;\n\n          if(this.state.runningTotal && signRegEx.test(currentRecord)){\n\n          this.setState({\n            initialState: this.state.operator + event,\n            calculatingState: '',\n            calculatedState: this.state.runningTotal,\n            recordedState: [this.state.recordedState + event],\n            operator: this.state.operator + event,\n            negative: true\n          });\n\n        }else if(this.state.negative === false && signRegEx.test(currentRecord)){\n\n          this.setState({\n            initialState: this.state.operator + event,\n            calculatingState: '',\n            calculatedState: [this.state.calculatedState + event],\n            recordedState: [this.state.recordedState + event],\n            operator: this.state.operator + event,\n            negative: true\n          });\n\n        }else if(this.state.runningTotal && numRegEx.test(currentRecord)){\n\n          this.setState({\n            initialState: event,\n            calculatingState: '',\n            calculatedState: this.state.runningTotal,\n            recordedState: [this.state.recordedState + event],\n            operator: event,\n            negative: false\n          });\n\n        }else{\n\n        this.setState({\n          initialState: event,\n          calculatingState: '',\n          calculatedState: [this.state.calculatedState + event], \n          recordedState: [this.state.recordedState + event],\n          operator: event,\n          negative: false\n        });\n        }\n        break;\n\n      case 'x':\n        if(this.state.runningTotal){\n\n          this.setState({\n            initialState: event,\n            calculatingState: '',\n            calculatedState: this.state.runningTotal,\n            recordedState: [this.state.recordedState + event],\n            operator: event,\n            negative: false\n          });\n\n        }else{\n\n        this.setState({\n          initialState: event,\n          calculatingState: '',\n          calculatedState: [this.state.calculatedState + event],\n          recordedState: [this.state.recordedState + event],\n          operator: event,\n          negative: false\n        });\n      }\n        break;\n\n      case '÷':\n        if(this.state.runningTotal){\n\n          this.setState({\n            initialState: event,\n            calculatingState: '',\n            calculatedState: this.state.runningTotal,\n            recordedState: [this.state.recordedState + event],\n            operator: event,\n            negative: false\n          });\n\n        }else{\n\n        this.setState({\n          initialState: event,\n          calculatingState: '',\n          calculatedState: [this.state.calculatedState + event],\n          recordedState: [this.state.recordedState + event],\n          operator: event,\n          negative: false\n        });\n      }\n        break;\n\n      case '.':\n        if(this.state.calculatingState.includes('.')){\n\n            this.setState({\n              initialState: '',\n              calculatingState: this.state.calculatingState,\n              calculatedState: [this.state.calculatedState],\n              recordedState: [this.state.recordedState],\n              operator: this.state.operator\n            });\n\n        }else{\n\n          this.setState({\n            initialState: '',\n            calculatingState: this.state.calculatingState + event,\n            calculatedState: [this.state.calculatedState + event],\n            recordedState: [this.state.recordedState + event],\n            operator: this.state.operator\n          });\n        }\n        break;\n\n        case '=':\n         this.setState({\n           calculatingState: round(this.state.runningTotal)\n         });\n          break;\n\n        default: \n\n        this.setState({\n          initialState: '',\n          calculatingState: this.state.calculatingState,\n          calculatedState: [this.state.calculatedState],\n          recordedState: [this.state.recordedState],\n          operator: this.state.operator\n        });\n    }\n    this.digitLimit();\n  }\n\n \n  clearOnClick(){\n    this.setState({\n      initialState: \"0\",\n      calculatingState: \"\",\n      calculatedState: [],\n      runningTotal: '',\n      recordedState: [],\n      operator: ''\n    });\n  }\n\n  digitLimit(){\n    if(this.state.calculatingState.length === 13){\n      alert(\"You have used the maximum digits for this calculator, press 'AC' and try again\");\n        this.setState({\n          calculatingState: this.state.calculatingState\n        });\n    }\n  }\n\n  \n  \n  render(){ \n    return(\n      <div id=\"container\">\n        <View tag=\"display\" \n              startValue={this.state.initialState} \n              activeValue={this.state.calculatingState} />\n\n        <Buttons tag=\"zero\" \n                 issuedValue=\"0\" \n                 globalOnClick={this.handleOnClick} type=\"number\" />\n\n        <Buttons tag=\"one\" \n                 issuedValue=\"1\" \n                 globalOnClick={this.handleOnClick} type=\"number\" />\n\n        <Buttons tag=\"two\" \n                 issuedValue=\"2\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"three\" \n                 issuedValue=\"3\" \n                 globalOnClick={this.handleOnClick} type=\"number\" />\n\n        <Buttons tag=\"four\" \n                 issuedValue=\"4\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"five\" \n                 issuedValue=\"5\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"six\" \n                 issuedValue=\"6\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"seven\" \n                 issuedValue=\"7\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"eight\" \n                 issuedValue=\"8\"  \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"nine\" \n                 issuedValue=\"9\" \n                 globalOnClick={this.handleOnClick} type=\"number\"/>\n\n        <Buttons tag=\"add\" \n                 issuedValue=\"+\" \n                 globalOnClick={this.handleOnClick} type=\"operator\"/>\n\n        <Buttons tag=\"subtract\" \n                 issuedValue=\"-\" \n                 globalOnClick={this.handleOnClick} type=\"operator\"/>\n\n        <Buttons tag=\"multiply\" \n                 issuedValue=\"x\" \n                 globalOnClick={this.handleOnClick} type=\"operator\"/>\n\n        <Buttons tag=\"divide\" \n                 issuedValue=\"÷\" \n                 globalOnClick={this.handleOnClick} type=\"operator\"/>\n\n        <Buttons tag=\"equals\" \n                 issuedValue=\"=\" \n                 globalOnClick={this.handleOnClick} type=\"operator\"/>\n\n        <Buttons tag=\"decimal\" \n                 issuedValue=\".\" \n                 globalOnClick={this.handleOnClick} type=\"number\" />\n\n        <Buttons tag=\"clear\" \n                 issuedValue=\"AC\" \n                 globalOnClick={this.clearOnClick} type=\"all-clear\"/>\n      </div>\n    )\n  }\n}\n\nReactDOM.render( \n  <Application / >,\n  document.getElementById('root')\n);"],"sourceRoot":""}